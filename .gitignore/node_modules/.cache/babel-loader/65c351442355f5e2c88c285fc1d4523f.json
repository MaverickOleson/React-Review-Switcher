{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eoles\\\\Desktop\\\\React-Review-Switcher\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './style/App.css';\nimport reviews from './Data';\nimport React, { useState } from 'react';\nimport { FaQuoteRight } from 'react-icons/fa';\nimport { MdKeyboardArrowRight, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [Reviews] = useState(reviews);\n  const [id, setId] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"quote\",\n      children: /*#__PURE__*/_jsxDEV(FaQuoteRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Reviews[id].image,\n        alt: \"&#x26A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `${Reviews[id].name.split(' ')[0].charAt(0).toUpperCase()}${Reviews[id].name.split(' ')[0].slice(1)} ${Reviews[id].name.split(' ')[1].charAt(0).toUpperCase()}${Reviews[id].name.split(' ')[1].slice(1)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"job\",\n      children: Reviews[id].job.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"para\",\n      children: Reviews[id].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"arrows\",\n      children: [/*#__PURE__*/_jsxDEV(MdKeyboardArrowLeft, {\n        onClick: () => {\n          setId(id - 1 === -1 ? Reviews.length - 1 : id - 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(MdKeyboardArrowRight, {\n        onClick: () => {\n          setId(id + 1 === Reviews.length ? 0 : id + 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 121\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Surprise me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LPpTZQI8+5DL6S8NWL8zzd4xs5U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/eoles/Desktop/React-Review-Switcher/src/App.js"],"names":["reviews","React","useState","FaQuoteRight","MdKeyboardArrowRight","MdKeyboardArrowLeft","App","Reviews","id","setId","image","name","split","charAt","toUpperCase","slice","job","text","length"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,OAAP,MAAoB,QAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,oBAAR,EAA8BC,mBAA9B,QAAwD,gBAAxD;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,IAAYL,QAAQ,CAACF,OAAD,CAA1B;AACA,QAAM,CAACQ,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,CAAD,CAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,6BAAsB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEK,OAAO,CAACC,EAAD,CAAP,CAAYE,KAAtB;AAA6B,QAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBAAM,GAAGH,OAAO,CAACC,EAAD,CAAP,CAAYG,IAAb,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCC,MAAjC,CAAwC,CAAxC,EAA2CC,WAA3C,EAAyD,GAAGP,OAAO,CAACC,EAAD,CAAP,CAAYG,IAAb,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCG,KAAjC,CAAuC,CAAvC,CAA0C,IAAIR,OAAO,CAACC,EAAD,CAAP,CAAYG,IAAb,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCC,MAAjC,CAAwC,CAAxC,EAA2CC,WAA3C,EAAyD,GAAGP,OAAO,CAACC,EAAD,CAAP,CAAYG,IAAb,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCG,KAAjC,CAAuC,CAAvC,CAA0C;AAArN;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA,gBAAqBR,OAAO,CAACC,EAAD,CAAP,CAAYQ,GAAb,CAAkBF,WAAlB;AAApB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,gBAAqBP,OAAO,CAACC,EAAD,CAAP,CAAYS;AAAjC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,8BAAuB,QAAC,mBAAD;AAAqB,QAAA,OAAO,EAAE,MAAI;AAACR,UAAAA,KAAK,CAAED,EAAE,GAAG,CAAL,KAAW,CAAC,CAAb,GAAkBD,OAAO,CAACW,MAAR,GAAiB,CAAnC,GAAuCV,EAAE,GAAG,CAA7C,CAAL;AAAqD;AAAxF;AAAA;AAAA;AAAA;AAAA,cAAvB,eAAkH,QAAC,oBAAD;AAAsB,QAAA,OAAO,EAAE,MAAI;AAACC,UAAAA,KAAK,CAAED,EAAE,GAAG,CAAL,KAAWD,OAAO,CAACW,MAApB,GAA8B,CAA9B,GAAkCV,EAAE,GAAG,CAAxC,CAAL;AAAgD;AAApF;AAAA;AAAA;AAAA;AAAA,cAAlH;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhBQF,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import './style/App.css';\r\nimport reviews from './Data';\r\nimport React, {useState} from 'react';\r\nimport {FaQuoteRight} from 'react-icons/fa';\r\nimport {MdKeyboardArrowRight, MdKeyboardArrowLeft} from 'react-icons/md'\r\n\r\nfunction App() {\r\n  const [Reviews] = useState(reviews);\r\n  const [id, setId] = useState(0);\r\n  return (\r\n    <div className=\"App\">\r\n      <h3 className='quote'><FaQuoteRight/></h3>\r\n      <div>\r\n        <img src={Reviews[id].image} alt='&#x26A0'/>\r\n      </div>\r\n      <h3>{`${(Reviews[id].name).split(' ')[0].charAt(0).toUpperCase()}${(Reviews[id].name).split(' ')[0].slice(1)} ${(Reviews[id].name).split(' ')[1].charAt(0).toUpperCase()}${(Reviews[id].name).split(' ')[1].slice(1)}`}</h3>\r\n      <p className='job'>{(Reviews[id].job).toUpperCase()}</p>\r\n      <p className='para'>{Reviews[id].text}</p>\r\n      <h1 className='arrows'><MdKeyboardArrowLeft onClick={()=>{setId((id - 1 === -1) ? Reviews.length - 1 : id - 1)}}/><MdKeyboardArrowRight onClick={()=>{setId((id + 1 === Reviews.length) ? 0 : id + 1)}}/></h1>\r\n      <button>Surprise me</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}